<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>